// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: chatterbox.proto

package chatterbox

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*Request_ClientJoin
	//	*Request_ClientMessage
	//	*Request_ClientPart
	//	*Request_ClientPing
	Event isRequest_Event `protobuf_oneof:"event"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatterbox_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_chatterbox_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_chatterbox_proto_rawDescGZIP(), []int{0}
}

func (m *Request) GetEvent() isRequest_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *Request) GetClientJoin() *Request_Join {
	if x, ok := x.GetEvent().(*Request_ClientJoin); ok {
		return x.ClientJoin
	}
	return nil
}

func (x *Request) GetClientMessage() *Request_Message {
	if x, ok := x.GetEvent().(*Request_ClientMessage); ok {
		return x.ClientMessage
	}
	return nil
}

func (x *Request) GetClientPart() *Request_Part {
	if x, ok := x.GetEvent().(*Request_ClientPart); ok {
		return x.ClientPart
	}
	return nil
}

func (x *Request) GetClientPing() *Request_Ping {
	if x, ok := x.GetEvent().(*Request_ClientPing); ok {
		return x.ClientPing
	}
	return nil
}

type isRequest_Event interface {
	isRequest_Event()
}

type Request_ClientJoin struct {
	ClientJoin *Request_Join `protobuf:"bytes,1,opt,name=client_join,json=clientJoin,proto3,oneof"`
}

type Request_ClientMessage struct {
	ClientMessage *Request_Message `protobuf:"bytes,2,opt,name=client_message,json=clientMessage,proto3,oneof"`
}

type Request_ClientPart struct {
	ClientPart *Request_Part `protobuf:"bytes,3,opt,name=client_part,json=clientPart,proto3,oneof"`
}

type Request_ClientPing struct {
	ClientPing *Request_Ping `protobuf:"bytes,4,opt,name=client_ping,json=clientPing,proto3,oneof"`
}

func (*Request_ClientJoin) isRequest_Event() {}

func (*Request_ClientMessage) isRequest_Event() {}

func (*Request_ClientPart) isRequest_Event() {}

func (*Request_ClientPing) isRequest_Event() {}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to Event:
	//	*Response_ClientMessage
	//	*Response_ClientJoin
	//	*Response_ClientPart
	//	*Response_ClientPong
	Event isResponse_Event `protobuf_oneof:"event"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatterbox_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_chatterbox_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_chatterbox_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (m *Response) GetEvent() isResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *Response) GetClientMessage() *Response_Message {
	if x, ok := x.GetEvent().(*Response_ClientMessage); ok {
		return x.ClientMessage
	}
	return nil
}

func (x *Response) GetClientJoin() *Response_Join {
	if x, ok := x.GetEvent().(*Response_ClientJoin); ok {
		return x.ClientJoin
	}
	return nil
}

func (x *Response) GetClientPart() *Response_Part {
	if x, ok := x.GetEvent().(*Response_ClientPart); ok {
		return x.ClientPart
	}
	return nil
}

func (x *Response) GetClientPong() *Response_Pong {
	if x, ok := x.GetEvent().(*Response_ClientPong); ok {
		return x.ClientPong
	}
	return nil
}

type isResponse_Event interface {
	isResponse_Event()
}

type Response_ClientMessage struct {
	ClientMessage *Response_Message `protobuf:"bytes,2,opt,name=client_message,json=clientMessage,proto3,oneof"`
}

type Response_ClientJoin struct {
	ClientJoin *Response_Join `protobuf:"bytes,3,opt,name=client_join,json=clientJoin,proto3,oneof"`
}

type Response_ClientPart struct {
	ClientPart *Response_Part `protobuf:"bytes,4,opt,name=client_part,json=clientPart,proto3,oneof"`
}

type Response_ClientPong struct {
	ClientPong *Response_Pong `protobuf:"bytes,5,opt,name=client_pong,json=clientPong,proto3,oneof"`
}

func (*Response_ClientMessage) isResponse_Event() {}

func (*Response_ClientJoin) isResponse_Event() {}

func (*Response_ClientPart) isResponse_Event() {}

func (*Response_ClientPong) isResponse_Event() {}

type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatterbox_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_chatterbox_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_chatterbox_proto_rawDescGZIP(), []int{2}
}

func (x *Session) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Request_Join struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *Request_Join) Reset() {
	*x = Request_Join{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatterbox_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Join) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Join) ProtoMessage() {}

func (x *Request_Join) ProtoReflect() protoreflect.Message {
	mi := &file_chatterbox_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Join.ProtoReflect.Descriptor instead.
func (*Request_Join) Descriptor() ([]byte, []int) {
	return file_chatterbox_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Request_Join) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type Request_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Text  string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Request_Message) Reset() {
	*x = Request_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatterbox_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Message) ProtoMessage() {}

func (x *Request_Message) ProtoReflect() protoreflect.Message {
	mi := &file_chatterbox_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Message.ProtoReflect.Descriptor instead.
func (*Request_Message) Descriptor() ([]byte, []int) {
	return file_chatterbox_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Request_Message) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Request_Message) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Request_Part struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *Request_Part) Reset() {
	*x = Request_Part{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatterbox_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Part) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Part) ProtoMessage() {}

func (x *Request_Part) ProtoReflect() protoreflect.Message {
	mi := &file_chatterbox_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Part.ProtoReflect.Descriptor instead.
func (*Request_Part) Descriptor() ([]byte, []int) {
	return file_chatterbox_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Request_Part) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type Request_Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Request_Ping) Reset() {
	*x = Request_Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatterbox_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Ping) ProtoMessage() {}

func (x *Request_Ping) ProtoReflect() protoreflect.Message {
	mi := &file_chatterbox_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Ping.ProtoReflect.Descriptor instead.
func (*Request_Ping) Descriptor() ([]byte, []int) {
	return file_chatterbox_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Request_Ping) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Response_Join struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Nick  string `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
}

func (x *Response_Join) Reset() {
	*x = Response_Join{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatterbox_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Join) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Join) ProtoMessage() {}

func (x *Response_Join) ProtoReflect() protoreflect.Message {
	mi := &file_chatterbox_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Join.ProtoReflect.Descriptor instead.
func (*Response_Join) Descriptor() ([]byte, []int) {
	return file_chatterbox_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Response_Join) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Response_Join) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

type Response_Part struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Nick  string `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
}

func (x *Response_Part) Reset() {
	*x = Response_Part{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatterbox_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Part) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Part) ProtoMessage() {}

func (x *Response_Part) ProtoReflect() protoreflect.Message {
	mi := &file_chatterbox_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Part.ProtoReflect.Descriptor instead.
func (*Response_Part) Descriptor() ([]byte, []int) {
	return file_chatterbox_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Response_Part) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Response_Part) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

type Response_Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nick string `protobuf:"bytes,1,opt,name=nick,proto3" json:"nick,omitempty"`
}

func (x *Response_Login) Reset() {
	*x = Response_Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatterbox_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Login) ProtoMessage() {}

func (x *Response_Login) ProtoReflect() protoreflect.Message {
	mi := &file_chatterbox_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Login.ProtoReflect.Descriptor instead.
func (*Response_Login) Descriptor() ([]byte, []int) {
	return file_chatterbox_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Response_Login) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

type Response_Logout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nick string `protobuf:"bytes,1,opt,name=nick,proto3" json:"nick,omitempty"`
}

func (x *Response_Logout) Reset() {
	*x = Response_Logout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatterbox_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Logout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Logout) ProtoMessage() {}

func (x *Response_Logout) ProtoReflect() protoreflect.Message {
	mi := &file_chatterbox_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Logout.ProtoReflect.Descriptor instead.
func (*Response_Logout) Descriptor() ([]byte, []int) {
	return file_chatterbox_proto_rawDescGZIP(), []int{1, 3}
}

func (x *Response_Logout) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

type Response_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Nick  string `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
	Text  string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Response_Message) Reset() {
	*x = Response_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatterbox_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Message) ProtoMessage() {}

func (x *Response_Message) ProtoReflect() protoreflect.Message {
	mi := &file_chatterbox_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Message.ProtoReflect.Descriptor instead.
func (*Response_Message) Descriptor() ([]byte, []int) {
	return file_chatterbox_proto_rawDescGZIP(), []int{1, 4}
}

func (x *Response_Message) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Response_Message) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *Response_Message) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Response_Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SentAt     *timestamp.Timestamp `protobuf:"bytes,1,opt,name=sentAt,proto3" json:"sentAt,omitempty"`
	ReceivedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=receivedAt,proto3" json:"receivedAt,omitempty"`
}

func (x *Response_Pong) Reset() {
	*x = Response_Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatterbox_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Pong) ProtoMessage() {}

func (x *Response_Pong) ProtoReflect() protoreflect.Message {
	mi := &file_chatterbox_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Pong.ProtoReflect.Descriptor instead.
func (*Response_Pong) Descriptor() ([]byte, []int) {
	return file_chatterbox_proto_rawDescGZIP(), []int{1, 5}
}

func (x *Response_Pong) GetSentAt() *timestamp.Timestamp {
	if x != nil {
		return x.SentAt
	}
	return nil
}

func (x *Response_Pong) GetReceivedAt() *timestamp.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

var File_chatterbox_proto protoreflect.FileDescriptor

var file_chatterbox_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x62, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x62, 0x6f, 0x78, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xc2, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x62, 0x6f, 0x78, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x44, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x62, 0x6f, 0x78, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x62, 0x6f, 0x78,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x62, 0x6f, 0x78, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x1a, 0x1c, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x1a, 0x33, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x1c, 0x0a, 0x04, 0x50,
	0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x1a, 0x40, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x07, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x22, 0xae, 0x05, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x45, 0x0a, 0x0e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x62, 0x6f, 0x78,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6a, 0x6f, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x62, 0x6f, 0x78, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4a, 0x6f,
	0x69, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4a, 0x6f, 0x69, 0x6e,
	0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x62,
	0x6f, 0x78, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x12, 0x3c,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x62, 0x6f, 0x78,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6e, 0x67, 0x1a, 0x30, 0x0a, 0x04,
	0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x1a, 0x30,
	0x0a, 0x04, 0x50, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b,
	0x1a, 0x1b, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x1a, 0x1c, 0x0a,
	0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x1a, 0x47, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x1a, 0x76, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74,
	0x12, 0x3a, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x42, 0x07, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x1f, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0x47, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x62, 0x6f, 0x78, 0x12, 0x39, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x13,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x62, 0x6f, 0x78, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x62, 0x6f, 0x78,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42,
	0x0e, 0x5a, 0x0c, 0x2e, 0x3b, 0x63, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x62, 0x6f, 0x78, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chatterbox_proto_rawDescOnce sync.Once
	file_chatterbox_proto_rawDescData = file_chatterbox_proto_rawDesc
)

func file_chatterbox_proto_rawDescGZIP() []byte {
	file_chatterbox_proto_rawDescOnce.Do(func() {
		file_chatterbox_proto_rawDescData = protoimpl.X.CompressGZIP(file_chatterbox_proto_rawDescData)
	})
	return file_chatterbox_proto_rawDescData
}

var file_chatterbox_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_chatterbox_proto_goTypes = []interface{}{
	(*Request)(nil),             // 0: chatterbox.Request
	(*Response)(nil),            // 1: chatterbox.Response
	(*Session)(nil),             // 2: chatterbox.Session
	(*Request_Join)(nil),        // 3: chatterbox.Request.Join
	(*Request_Message)(nil),     // 4: chatterbox.Request.Message
	(*Request_Part)(nil),        // 5: chatterbox.Request.Part
	(*Request_Ping)(nil),        // 6: chatterbox.Request.Ping
	(*Response_Join)(nil),       // 7: chatterbox.Response.Join
	(*Response_Part)(nil),       // 8: chatterbox.Response.Part
	(*Response_Login)(nil),      // 9: chatterbox.Response.Login
	(*Response_Logout)(nil),     // 10: chatterbox.Response.Logout
	(*Response_Message)(nil),    // 11: chatterbox.Response.Message
	(*Response_Pong)(nil),       // 12: chatterbox.Response.Pong
	(*timestamp.Timestamp)(nil), // 13: google.protobuf.Timestamp
}
var file_chatterbox_proto_depIdxs = []int32{
	3,  // 0: chatterbox.Request.client_join:type_name -> chatterbox.Request.Join
	4,  // 1: chatterbox.Request.client_message:type_name -> chatterbox.Request.Message
	5,  // 2: chatterbox.Request.client_part:type_name -> chatterbox.Request.Part
	6,  // 3: chatterbox.Request.client_ping:type_name -> chatterbox.Request.Ping
	13, // 4: chatterbox.Response.timestamp:type_name -> google.protobuf.Timestamp
	11, // 5: chatterbox.Response.client_message:type_name -> chatterbox.Response.Message
	7,  // 6: chatterbox.Response.client_join:type_name -> chatterbox.Response.Join
	8,  // 7: chatterbox.Response.client_part:type_name -> chatterbox.Response.Part
	12, // 8: chatterbox.Response.client_pong:type_name -> chatterbox.Response.Pong
	13, // 9: chatterbox.Request.Ping.timestamp:type_name -> google.protobuf.Timestamp
	13, // 10: chatterbox.Response.Pong.sentAt:type_name -> google.protobuf.Timestamp
	13, // 11: chatterbox.Response.Pong.receivedAt:type_name -> google.protobuf.Timestamp
	0,  // 12: chatterbox.Chatterbox.Stream:input_type -> chatterbox.Request
	1,  // 13: chatterbox.Chatterbox.Stream:output_type -> chatterbox.Response
	13, // [13:14] is the sub-list for method output_type
	12, // [12:13] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_chatterbox_proto_init() }
func file_chatterbox_proto_init() {
	if File_chatterbox_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chatterbox_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatterbox_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatterbox_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatterbox_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Join); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatterbox_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatterbox_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Part); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatterbox_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatterbox_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Join); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatterbox_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Part); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatterbox_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatterbox_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Logout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatterbox_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatterbox_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_chatterbox_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Request_ClientJoin)(nil),
		(*Request_ClientMessage)(nil),
		(*Request_ClientPart)(nil),
		(*Request_ClientPing)(nil),
	}
	file_chatterbox_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Response_ClientMessage)(nil),
		(*Response_ClientJoin)(nil),
		(*Response_ClientPart)(nil),
		(*Response_ClientPong)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chatterbox_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chatterbox_proto_goTypes,
		DependencyIndexes: file_chatterbox_proto_depIdxs,
		MessageInfos:      file_chatterbox_proto_msgTypes,
	}.Build()
	File_chatterbox_proto = out.File
	file_chatterbox_proto_rawDesc = nil
	file_chatterbox_proto_goTypes = nil
	file_chatterbox_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatterboxClient is the client API for Chatterbox service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatterboxClient interface {
	Stream(ctx context.Context, opts ...grpc.CallOption) (Chatterbox_StreamClient, error)
}

type chatterboxClient struct {
	cc grpc.ClientConnInterface
}

func NewChatterboxClient(cc grpc.ClientConnInterface) ChatterboxClient {
	return &chatterboxClient{cc}
}

func (c *chatterboxClient) Stream(ctx context.Context, opts ...grpc.CallOption) (Chatterbox_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chatterbox_serviceDesc.Streams[0], "/chatterbox.Chatterbox/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatterboxStreamClient{stream}
	return x, nil
}

type Chatterbox_StreamClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type chatterboxStreamClient struct {
	grpc.ClientStream
}

func (x *chatterboxStreamClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatterboxStreamClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatterboxServer is the server API for Chatterbox service.
type ChatterboxServer interface {
	Stream(Chatterbox_StreamServer) error
}

// UnimplementedChatterboxServer can be embedded to have forward compatible implementations.
type UnimplementedChatterboxServer struct {
}

func (*UnimplementedChatterboxServer) Stream(Chatterbox_StreamServer) error {
	return status.Errorf(codes.Unimplemented, "method Stream not implemented")
}

func RegisterChatterboxServer(s *grpc.Server, srv ChatterboxServer) {
	s.RegisterService(&_Chatterbox_serviceDesc, srv)
}

func _Chatterbox_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatterboxServer).Stream(&chatterboxStreamServer{stream})
}

type Chatterbox_StreamServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type chatterboxStreamServer struct {
	grpc.ServerStream
}

func (x *chatterboxStreamServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatterboxStreamServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Chatterbox_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chatterbox.Chatterbox",
	HandlerType: (*ChatterboxServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Chatterbox_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "chatterbox.proto",
}
